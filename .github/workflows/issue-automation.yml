name: Issue Automation

on:
  issues:
    types: [opened, labeled, closed]
  issue_comment:
    types: [created]
  pull_request:
    types: [opened, closed, merged]

permissions:
  issues: write
  pull-requests: write
  contents: read

jobs:
  auto-label-issues:
    name: Auto Label Issues
    runs-on: ubuntu-latest
    if: github.event.action == 'opened' && github.event_name == 'issues'
    
    steps:
    - name: Auto-label based on title
      uses: actions/github-script@v7
      with:
        script: |
          const issue = context.payload.issue;
          const title = issue.title.toLowerCase();
          const body = issue.body ? issue.body.toLowerCase() : '';
          
          const labels = [];
          
          // Auto-label based on keywords
          if (title.includes('bug') || title.includes('error') || title.includes('fail')) {
            labels.push('bug');
          }
          
          if (title.includes('feature') || title.includes('enhancement') || title.includes('request')) {
            labels.push('enhancement');
          }
          
          if (title.includes('doc') || title.includes('readme') || title.includes('guide')) {
            labels.push('documentation');
          }
          
          if (title.includes('security') || title.includes('vulnerability')) {
            labels.push('security');
          }
          
          if (title.includes('powercli') || body.includes('powershell')) {
            labels.push('powercli');
          }
          
          if (title.includes('python') || title.includes('api')) {
            labels.push('python');
          }
          
          if (title.includes('vsphere') || title.includes('vcenter') || title.includes('esxi')) {
            labels.push('vsphere');
          }
          
          if (title.includes('help') || title.includes('question') || title.includes('how to')) {
            labels.push('question');
          }
          
          // Add priority labels
          if (title.includes('urgent') || title.includes('critical') || title.includes('production')) {
            labels.push('priority: high');
          } else if (title.includes('minor') || title.includes('cosmetic')) {
            labels.push('priority: low');
          } else {
            labels.push('priority: medium');
          }
          
          // Add difficulty labels for enhancement requests
          if (labels.includes('enhancement')) {
            if (title.includes('simple') || title.includes('easy')) {
              labels.push('good first issue');
            }
          }
          
          if (labels.length > 0) {
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              labels: labels
            });
          }

  welcome-new-contributors:
    name: Welcome New Contributors
    runs-on: ubuntu-latest
    if: github.event.action == 'opened'
    
    steps:
    - name: Check if first-time contributor
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo } = context.repo;
          const author = context.payload.sender.login;
          
          // Check if this is the user's first contribution
          const { data: issues } = await github.rest.issues.listForRepo({
            owner,
            repo,
            creator: author,
            state: 'all'
          });
          
          const { data: prs } = await github.rest.pulls.list({
            owner,
            repo,
            creator: author,
            state: 'all'
          });
          
          const isFirstContribution = issues.length <= 1 && prs.length === 0;
          
          if (isFirstContribution) {
            const welcomeMessage = `
## üëã Welcome to VMware vSphere 7 Learning Hub!

Thank you for your interest in contributing to our project! This appears to be your first contribution - welcome to the community! üéâ

### üìö Getting Started
- Check out our [Contributing Guidelines](https://github.com/uldyssian-sh/vmware-vsphere-7-learn/blob/main/CONTRIBUTING.md)
- Browse our [Documentation](https://github.com/uldyssian-sh/vmware-vsphere-7-learn/blob/main/README.md)
- Join our discussions in the [Issues](https://github.com/uldyssian-sh/vmware-vsphere-7-learn/issues) section

### ü§ù How We Can Help
- If you need help getting started, add the \`help wanted\` label
- For questions about vSphere or VMware technologies, use the \`question\` label
- Check out issues labeled \`good first issue\` for beginner-friendly tasks

### üîß Development Environment
Make sure you have:
- Python 3.8+ for API scripts
- PowerShell 5.1+ for PowerCLI scripts
- VMware vSphere 7.0+ environment for testing

We're excited to have you here and look forward to your contributions! üöÄ

---
*This is an automated message for first-time contributors.*
            `;
            
            if (context.eventName === 'issues') {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: context.payload.issue.number,
                body: welcomeMessage
              });
            } else if (context.eventName === 'pull_request') {
              await github.rest.pulls.createReview({
                owner,
                repo,
                pull_number: context.payload.pull_request.number,
                body: welcomeMessage,
                event: 'COMMENT'
              });
            }
          }

  stale-issue-management:
    name: Stale Issue Management
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Mark stale issues
      uses: actions/stale@v9
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        stale-issue-message: |
          This issue has been automatically marked as stale because it has not had recent activity. 
          It will be closed if no further activity occurs within 7 days.
          
          If this issue is still relevant, please:
          - Add a comment to keep it open
          - Add the `keep-open` label
          - Provide additional context or updates
          
          Thank you for your contributions! üôè
        stale-pr-message: |
          This pull request has been automatically marked as stale because it has not had recent activity.
          It will be closed if no further activity occurs within 7 days.
          
          If this PR is still relevant, please:
          - Rebase against the latest main branch
          - Address any review comments
          - Add a comment to keep it open
          
          Thank you for your contributions! üôè
        stale-issue-label: 'stale'
        stale-pr-label: 'stale'
        exempt-issue-labels: 'keep-open,security,priority: high'
        exempt-pr-labels: 'keep-open,security,priority: high'
        days-before-stale: 30
        days-before-close: 7
        operations-per-run: 30

  auto-close-completed:
    name: Auto Close Completed Issues
    runs-on: ubuntu-latest
    if: github.event.action == 'closed' && github.event_name == 'pull_request' && github.event.pull_request.merged == true
    
    steps:
    - name: Close linked issues
      uses: actions/github-script@v7
      with:
        script: |
          const pr = context.payload.pull_request;
          const body = pr.body || '';
          
          // Look for "fixes #123", "closes #123", "resolves #123" patterns
          const issuePattern = /(?:fix|fixes|fixed|close|closes|closed|resolve|resolves|resolved)\s+#(\d+)/gi;
          const matches = body.matchAll(issuePattern);
          
          for (const match of matches) {
            const issueNumber = parseInt(match[1]);
            
            try {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                body: `üéâ This issue has been resolved by PR #${pr.number} and will be available in the next release.`
              });
              
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                state: 'closed'
              });
            } catch (error) {
              console.log(`Could not close issue #${issueNumber}: ${error.message}`);
            }
          }

  security-issue-alert:
    name: Security Issue Alert
    runs-on: ubuntu-latest
    if: github.event.action == 'labeled' && contains(github.event.label.name, 'security')
    
    steps:
    - name: Alert on security issues
      uses: actions/github-script@v7
      with:
        script: |
          const issue = context.payload.issue;
          
          const securityMessage = `
## üîí Security Issue Detected

This issue has been labeled as a security concern. Our security team has been notified.

### ‚ö†Ô∏è Important Security Guidelines:
- **DO NOT** post sensitive information (passwords, keys, tokens) in public issues
- **DO NOT** include production system details or IP addresses
- **DO** provide general reproduction steps without sensitive data
- **DO** use placeholder values like \`<username>\`, \`<password>\`, \`<server>\`

### üö® For Critical Security Issues:
If this is a critical security vulnerability, please:
1. **DO NOT** disclose details publicly
2. Email security concerns to: [Create a private security advisory](https://github.com/uldyssian-sh/vmware-vsphere-7-learn/security/advisories/new)
3. We will respond within 24 hours

### üìã Next Steps:
- This issue will be prioritized for review
- We may request additional information via private channels
- A fix timeline will be provided once assessed

Thank you for helping keep our project secure! üõ°Ô∏è
          `;
          
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: issue.number,
            body: securityMessage
          });
          
          // Add high priority label
          await github.rest.issues.addLabels({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: issue.number,
            labels: ['priority: high']
          });